// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Epoch extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Epoch entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Epoch entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Epoch", id.toString(), this);
  }

  static load(id: string): Epoch | null {
    return store.get("Epoch", id) as Epoch | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get startDAOTotalBonded(): BigInt | null {
    let value = this.get("startDAOTotalBonded");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startDAOTotalBonded(value: BigInt | null) {
    if (value === null) {
      this.unset("startDAOTotalBonded");
    } else {
      this.set("startDAOTotalBonded", Value.fromBigInt(value as BigInt));
    }
  }

  get startDAOTotalStaged(): BigInt | null {
    let value = this.get("startDAOTotalStaged");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startDAOTotalStaged(value: BigInt | null) {
    if (value === null) {
      this.unset("startDAOTotalStaged");
    } else {
      this.set("startDAOTotalStaged", Value.fromBigInt(value as BigInt));
    }
  }

  get startTotalDebt(): BigInt | null {
    let value = this.get("startTotalDebt");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTotalDebt(value: BigInt | null) {
    if (value === null) {
      this.unset("startTotalDebt");
    } else {
      this.set("startTotalDebt", Value.fromBigInt(value as BigInt));
    }
  }

  get startTotalRedeemable(): BigInt | null {
    let value = this.get("startTotalRedeemable");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTotalRedeemable(value: BigInt | null) {
    if (value === null) {
      this.unset("startTotalRedeemable");
    } else {
      this.set("startTotalRedeemable", Value.fromBigInt(value as BigInt));
    }
  }

  get startTotalCoupons(): BigInt | null {
    let value = this.get("startTotalCoupons");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTotalCoupons(value: BigInt | null) {
    if (value === null) {
      this.unset("startTotalCoupons");
    } else {
      this.set("startTotalCoupons", Value.fromBigInt(value as BigInt));
    }
  }

  get startTotalNet(): BigInt | null {
    let value = this.get("startTotalNet");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTotalNet(value: BigInt | null) {
    if (value === null) {
      this.unset("startTotalNet");
    } else {
      this.set("startTotalNet", Value.fromBigInt(value as BigInt));
    }
  }

  get startTotalLPESD(): BigInt | null {
    let value = this.get("startTotalLPESD");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTotalLPESD(value: BigInt | null) {
    if (value === null) {
      this.unset("startTotalLPESD");
    } else {
      this.set("startTotalLPESD", Value.fromBigInt(value as BigInt));
    }
  }

  get startTotalLPTokens(): BigInt | null {
    let value = this.get("startTotalLPTokens");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTotalLPTokens(value: BigInt | null) {
    if (value === null) {
      this.unset("startTotalLPTokens");
    } else {
      this.set("startTotalLPTokens", Value.fromBigInt(value as BigInt));
    }
  }

  get startLPTotalBondedTokens(): BigInt | null {
    let value = this.get("startLPTotalBondedTokens");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startLPTotalBondedTokens(value: BigInt | null) {
    if (value === null) {
      this.unset("startLPTotalBondedTokens");
    } else {
      this.set("startLPTotalBondedTokens", Value.fromBigInt(value as BigInt));
    }
  }

  get startLPTotalStagedTokens(): BigInt | null {
    let value = this.get("startLPTotalStagedTokens");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startLPTotalStagedTokens(value: BigInt | null) {
    if (value === null) {
      this.unset("startLPTotalStagedTokens");
    } else {
      this.set("startLPTotalStagedTokens", Value.fromBigInt(value as BigInt));
    }
  }

  get startLPTotalBondedESD(): BigInt | null {
    let value = this.get("startLPTotalBondedESD");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startLPTotalBondedESD(value: BigInt | null) {
    if (value === null) {
      this.unset("startLPTotalBondedESD");
    } else {
      this.set("startLPTotalBondedESD", Value.fromBigInt(value as BigInt));
    }
  }

  get startLPTotalStagedESD(): BigInt | null {
    let value = this.get("startLPTotalStagedESD");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startLPTotalStagedESD(value: BigInt | null) {
    if (value === null) {
      this.unset("startLPTotalStagedESD");
    } else {
      this.set("startLPTotalStagedESD", Value.fromBigInt(value as BigInt));
    }
  }

  get startTimestamp(): BigInt | null {
    let value = this.get("startTimestamp");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTimestamp(value: BigInt | null) {
    if (value === null) {
      this.unset("startTimestamp");
    } else {
      this.set("startTimestamp", Value.fromBigInt(value as BigInt));
    }
  }

  get startBlock(): BigInt | null {
    let value = this.get("startBlock");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startBlock(value: BigInt | null) {
    if (value === null) {
      this.unset("startBlock");
    } else {
      this.set("startBlock", Value.fromBigInt(value as BigInt));
    }
  }

  get expiredCoupons(): BigInt | null {
    let value = this.get("expiredCoupons");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set expiredCoupons(value: BigInt | null) {
    if (value === null) {
      this.unset("expiredCoupons");
    } else {
      this.set("expiredCoupons", Value.fromBigInt(value as BigInt));
    }
  }

  get outstandingCoupons(): BigInt | null {
    let value = this.get("outstandingCoupons");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set outstandingCoupons(value: BigInt | null) {
    if (value === null) {
      this.unset("outstandingCoupons");
    } else {
      this.set("outstandingCoupons", Value.fromBigInt(value as BigInt));
    }
  }

  get couponsExpiration(): BigInt | null {
    let value = this.get("couponsExpiration");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set couponsExpiration(value: BigInt | null) {
    if (value === null) {
      this.unset("couponsExpiration");
    } else {
      this.set("couponsExpiration", Value.fromBigInt(value as BigInt));
    }
  }

  get oraclePrice(): BigInt | null {
    let value = this.get("oraclePrice");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set oraclePrice(value: BigInt | null) {
    if (value === null) {
      this.unset("oraclePrice");
    } else {
      this.set("oraclePrice", Value.fromBigInt(value as BigInt));
    }
  }

  get deltaSupply(): BigInt | null {
    let value = this.get("deltaSupply");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set deltaSupply(value: BigInt | null) {
    if (value === null) {
      this.unset("deltaSupply");
    } else {
      this.set("deltaSupply", Value.fromBigInt(value as BigInt));
    }
  }

  get bootstrappingAt(): boolean {
    let value = this.get("bootstrappingAt");
    return value.toBoolean();
  }

  set bootstrappingAt(value: boolean) {
    this.set("bootstrappingAt", Value.fromBoolean(value));
  }
}

export class Account extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Account entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Account entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Account", id.toString(), this);
  }

  static load(id: string): Account | null {
    return store.get("Account", id) as Account | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get stagedBalance(): BigInt | null {
    let value = this.get("stagedBalance");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set stagedBalance(value: BigInt | null) {
    if (value === null) {
      this.unset("stagedBalance");
    } else {
      this.set("stagedBalance", Value.fromBigInt(value as BigInt));
    }
  }

  get bondedBalance(): BigInt | null {
    let value = this.get("bondedBalance");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set bondedBalance(value: BigInt | null) {
    if (value === null) {
      this.unset("bondedBalance");
    } else {
      this.set("bondedBalance", Value.fromBigInt(value as BigInt));
    }
  }

  get holdingBalance(): BigInt | null {
    let value = this.get("holdingBalance");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set holdingBalance(value: BigInt | null) {
    if (value === null) {
      this.unset("holdingBalance");
    } else {
      this.set("holdingBalance", Value.fromBigInt(value as BigInt));
    }
  }

  get epochNo(): BigInt {
    let value = this.get("epochNo");
    return value.toBigInt();
  }

  set epochNo(value: BigInt) {
    this.set("epochNo", Value.fromBigInt(value));
  }

  get address(): string {
    let value = this.get("address");
    return value.toString();
  }

  set address(value: string) {
    this.set("address", Value.fromString(value));
  }
}
